<?php

namespace Procountor\Procountor\Interfaces\Read;

use Procountor\Procountor\Interfaces\InvoiceCommon;
use Procountor\Procountor\Collection\AttachmentCollection;
use Procountor\Procountor\Collection\TravelInformationItemsCollection;

/**
 * interface Invoice
 *
 * Read-spesific interface for invoices.
 *
 * @see Procountor\Procountor\Interfaces\InvoiceCommon;
 * @see https://dev.procountor.com/api-reference/#model-Invoice
 *
 * @package Procountor\Procountor\Interfaces\Read
 */
interface Invoice extends InvoiceCommon
{

    /**
     * Unique identifier of the invoice. Generated by Procountor and present in the object returned.
     *
     * @return int
     */
    public function getId(): int;

    /**
     * Invoice number generated by Procountor. For custom invoice numbers, see the originalInvoiceNumber property.
     *
     * @return int
     */
    public function getInvoiceNumber(): int;

    /**
     * ID of the ledger receipt linked to this invoice. A ledger receipt is linked to every invoice for holding its accounting information.
     * For defining ledger accounts, dimensions or VAT status regarding the invoice, modify the ledger receipt.
     * @see https://dev.procountor.com/api-reference/#operations-Ledger_receipts-updateLedgerReceipt
     *
     * @return null|int
     */
    public function getLedgerReceiptId(): ?int;

    /**
     * Only for invoice type PERIODIC_TAX_RETURN. Ignored for other types.
     * Contains the total sum of invoice.
     *
     * @return null|string
     */
    public function getSum(): ?string;

    /**
     * List of attachments added to this invoice.
     * Use POST and DELETE /attachments to add and delete attachments
     * @see https://dev.procountor.com/api-reference/#operations-Attachments-saveAttachment
     * @see https://dev.procountor.com/api-reference/#operations-Attachments-deleteAttachment
     * @see Procountor\Procountor\Resources\Attachments::post()
     * @see Procountor\Procountor\Resources\Attachments::delete()
     *
     * @return null|AttachmentCollection
     */
    public function getAttachments(): ?AttachmentCollection;

    /**
     * Travel information items.
     * Travel invoice may have one or more travel information items containing
     * departure date, return date, destinations and travel purpose.
     *
     * @return null|TravelInformationItemsCollection
     */
    public function getTravelInformationItems(): ?TravelInformationItemsCollection;

}
